{"version":3,"file":"static/iframe.c37782e67f2a2ac7c4ee.bundle.js","sources":["webpack:///./src/lib/ElementBasedDeviceDedector.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactResizeDetector from 'react-resize-detector';\n\n/**\n * https://usehooks.com/\n */\n\nclass ElementBasedDeviceDedector extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.lastType = null;\n  }\n\n  onResize = width => {\n    this.dedectDeviceType(width);\n  };\n\n  dedectDeviceType = width => {\n    const { onChangeType, devices: _devices } = this.props;\n\n    // sort descending devices by breakpoint px\n    const devices = _devices.sort((device1, device2) =>\n      device1.breakpointPx > device2.breakpointPx ? -1 : device1.breakpointPx === device2.breakpointPx ? 0 : 1,\n    );\n\n    console.log(devices);\n\n    // compare\n    for (let i = 0; i < devices.length; i += 1) {\n      // check breakpoint and dont recall if already set\n      if (width > devices[i].breakpointPx) {\n        if (this.lastType !== devices[i].name) {\n          this.lastType = devices[i].name;\n          console.log(devices[i].name);\n          onChangeType(devices[i].name, devices[i].breakpointPx);\n        }\n        break;\n      }\n    }\n  };\n\n  render() {\n    const { refreshRate, ...otherProps } = this.props;\n    return <ReactResizeDetector handleWidth onResize={this.onResize} {...otherProps} />;\n  }\n}\n\nElementBasedDeviceDedector.propTypes = {\n  onChangeType: PropTypes.func.isRequired,\n  devices: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      breakpointPx: PropTypes.number,\n    }),\n  ),\n};\n\nElementBasedDeviceDedector.defaultProps = {\n  devices: [\n    {\n      name: 'mobile',\n      breakpointPx: 500,\n    },\n    {\n      name: 'tablet',\n      breakpointPx: 720,\n    },\n    {\n      name: 'computer',\n      breakpointPx: 900,\n    },\n  ],\n};\n\nexport default ElementBasedDeviceDedector;\n"],"mappings":"AAQA","sourceRoot":""}